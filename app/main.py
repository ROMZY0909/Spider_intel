# app/main.py

import os
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from dotenv import load_dotenv

# ‚úÖ Charge les variables d‚Äôenvironnement
load_dotenv()

# ‚úÖ Instanciation de l‚Äôapplication
app = FastAPI(
    title=os.getenv("APP_NAME", "SPIDER_INTEL"),
    version=os.getenv("APP_VERSION", "1.0.0"),
    description="üï∑Ô∏è Plateforme de veille OSINT avec int√©gration Telegram, PDF, Supabase et APIs de s√©curit√©."
)

# ‚úÖ Middleware CORS (√† restreindre en prod)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ‚úÖ Inclusion des routes
try:
    from app.routes.email_route import router as EmailRouter
    from app.routes.auth_route import router as AuthRouter
    from app.telegram.webhook import router as TelegramWebhookRouter
except ModuleNotFoundError as e:
    # üî• Render √©choue si le PYTHONPATH n'est pas correctement configur√©
    # Ajout dynamique du chemin parent si n√©cessaire
    import sys
    from pathlib import Path
    sys.path.append(str(Path(__file__).resolve().parent.parent))
    from app.routes.email_route import router as EmailRouter
    from app.routes.auth_route import router as AuthRouter
    from app.telegram.webhook import router as TelegramWebhookRouter

# ‚úÖ Enregistrement des routes
app.include_router(EmailRouter, prefix="/email", tags=["Email OSINT"])
app.include_router(AuthRouter, prefix="/auth", tags=["Authentification"])
app.include_router(TelegramWebhookRouter, prefix="", tags=["Telegram Webhook"])

# ‚úÖ Route de test
@app.get("/")
def read_root():
    return {
        "message": "‚úÖ Bienvenue sur SPIDER INTEL !",
        "version": os.getenv("APP_VERSION", "1.0.0")
    }
